#!/bin/bash

set -e -o pipefail

export init_file="/etc/mysql/init-file.sql"

# Configure: mysql
if [[ ! -e "${EP_RUN}" ]] ; then
	log "Configuring $(basename "${0}") for first run ..."

	# Generate passwords ...
	generate_password "mysql_root"
	[[ -n "${MYSQL_USER}" ]] && generate_password "mysql_user"

	# Generate keypairs ...
	generate_rsakey mysql

	ln --symbolic /etc/ssl/certs/mysqlca.crt /usr/share/ca-certificates/
	echo mysqlca.crt >> /etc/ca-certificates.conf
	update-ca-certificates

	log "Modifying: mysqld.cnf ..."
	# https://dev.mysql.com/doc/refman/5.7/en/encrypted-connection-protocols-ciphers.html
	MYSQL_TLS_CIPHERSUITES="${MYSQL_TLS_CIPHERSUITES:="TLS_AES_256_GCM_SHA384"}"
	MYSQL_TLS_VERSION="${MYSQL_TLS_VERSION:="TLSv1.3"}"
	for i in mysql mysqld; do
		sed --expression="\$atls_version = ${MYSQL_TLS_VERSION}" \
			--expression="\$atls_ciphersuites = ${MYSQL_TLS_CIPHERSUITES}" \
			--in-place "/etc/mysql/mysql.conf.d/${i}.cnf"
	done
	[[ -n "${MYSQL_ALLOW_INSECURE_ROOT}" || -n "${MYSQL_ALLOW_INSECURE_USER}" ]] && \
		sed --expression="/require-secure-transport = /s/^/#/g" \
			--in-place /etc/mysql/mysql.conf.d/mysqld.cnf

	# Volume initialization
	if [[ ! -d "${MYSQL_DATA}/mysql" ]]; then
		log "Initializing data volume ..."

		log "Priming reserved tables ..."
		/usr/sbin/mysqld \
			--initialize \
			--skip-networking

		# TODO: Are these needed for less-secure ciphersuites / tls versions?
		#openssl genrsa -out "${MYSQL_DATA}/private_key.pem" "${EP_RSA_KEY_SIZE}"
		#openssl rsa -in "${MYSQL_DATA}/private_key.pem" -out "${MYSQL_DATA}/public_key.pem" -pubout

		log "Generating: ${init_file} ..."
		cat <<- EOF > "${init_file}"
			DELETE FROM mysql.user ;
			CREATE USER 'root'@'%' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}' ;
			GRANT ALL ON *.* TO 'root'@'%' WITH GRANT OPTION ;
			DROP DATABASE IF EXISTS test ;
		EOF
		
		[[ -n "${MYSQL_DATABASE}" ]] && \
			echo "CREATE DATABASE IF NOT EXISTS \`${MYSQL_DATABASE}\` ;" >> "${init_file}"
		
		if [[ -n "${MYSQL_USER}" ]] ; then
			echo "CREATE USER '${MYSQL_USER}'@'%' IDENTIFIED BY '${MYSQL_USER_PASSWORD}' ;" >> "${init_file}"
			
			[[ -n "${MYSQL_DATABASE}" ]] && \
				echo "GRANT ALL ON \`${MYSQL_DATABASE}\`.* TO '${MYSQL_USER}'@'%' ;" >> "${init_file}"
		fi

		[[ -n "${MYSQL_ALLOW_INSECURE_ROOT}" ]] && \
			log "Relaxing TLS: root" && \
			echo "ALTER USER 'root'@'%' REQUIRE NONE ;" >> "${init_file}"
		[[ -n "${MYSQL_ALLOW_INSECURE_USER}" ]] && \
			log "Relaxying TLS: ${MYSQL_USER}" && \
			echo "ALTER USER '${MYSQL_USER}'@'%' REQUIRE NONE ;" >> "${init_file}"

		echo "FLUSH PRIVILEGES ;" >> "${init_file}"

		log "Starting mysql ..."
		/usr/sbin/mysqld \
			--datadir="${MYSQL_DATA}" \
			--default-time-zone=SYSTEM \
			--expire-logs-days=0 \
			--init-file="${init_file}" \
			--skip-networking \
			--user=root &

		log "Waiting for initialization..."
		mysqladmin --password="${MYSQL_ROOT_PASSWORD}" --silent --wait=30 ping > /dev/null

		log "Stopping mysql ..."
		mysqladmin --password="${MYSQL_ROOT_PASSWORD}" shutdown

		rm --force "${init_file}"
	fi
	
	log "Applying ownership and permissions ..."
	find "${MYSQL_DATA}" \( \! -user mysql -o \! -group mysql \) -exec chown mysql:mysql {} \;
fi

